<Activity mc:Ignorable="sap sap2010" x:Class="Automatathon" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="778,6540.66666666667" sap2010:WorkflowViewState.IdRef="Automatathon_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="47">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Automatathon" sap:VirtualizedContainerService.HintSize="788,6476" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="2" Name="count" />
      <Variable x:TypeArguments="x:String" Name="listofDoc" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="Attachments" />
      <Variable x:TypeArguments="s:String[]" Name="FolderPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleWhile Condition="[count&lt;=5]" DisplayName="While" sap:VirtualizedContainerService.HintSize="746,6384" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="709.333333333333,6214.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="name" />
            <Variable x:TypeArguments="x:Int32" Name="age" />
            <Variable x:TypeArguments="x:String" Name="email" />
            <Variable x:TypeArguments="x:String" Name="symptoms" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="667.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Enter your name" Title="Name">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="667.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Enter your age" Title="Age">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:Int32">[age]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="667.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="Enter your email" Title="Email">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[email]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="667.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Enter comma separated symptoms" Title="Symptoms">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[symptoms]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="667.333333333333,4882" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="C:\Users\Videh Nandini\Desktop\College\RPA\Patients.xlsx">
            <ueab:ExcelApplicationCard.Body>
              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="633.333333333333,4605.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="DoctorsDT" />
                    <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="MailMessages" />
                    <Variable x:TypeArguments="x:String" Name="claimerPossible" />
                    <Variable x:TypeArguments="x:String" Name="password" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[name]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[age]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;C&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[email]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[symptoms]" />
                  <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="591.333333333333,172" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Sheet2&quot;).Range(&quot;A2:D6&quot;)]" SaveTo="[DoctorsDT]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DoctorsDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="591.333333333333,747.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,626.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[CurrentRow.item(1).ToString.Contains(symptoms)]" sap:VirtualizedContainerService.HintSize="484,534.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,343.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Name: &quot;+name.ToString + vbCrLf+&quot;Age: &quot;+age.ToString+vbCrLf+&quot;Symptoms: &quot;+symptoms+vbCrLf+&quot;Email: &quot;+email.toString]" DisplayName="Send SMTP Mail Message" Email="1ms19cs135.3b@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Password="Utkarsh@#&amp;123" Port="25" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Patient's details" To="[CurrentRow.Item(2).ToString]">
                                  <ui:SendMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendMail.Files>
                                </ui:SendMail>
                                <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[listofDoc]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[listofDoc+","+CurrentRow.Item(0).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                  <Assign sap:VirtualizedContainerService.HintSize="591.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[listofDoc]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[listofDoc.Substring(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[listofDoc]" />
                  <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="591.333333333333,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="True" Label="Enter password" Title="password">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[password]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" FilterExpression="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="[email]" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="591.333333333333,22" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[MailMessages]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Password="[password]" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="30" />
                  <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="591.333333333333,788.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[MailMessages]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="snm:MailMessage">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="554.666666666667,664" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[item.Subject.ToLower.Contains(&quot;prescription&quot;)]" sap:VirtualizedContainerService.HintSize="512.666666666667,572" sap2010:WorkflowViewState.IdRef="If_3">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,380.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SaveMailAttachments Attachments="[Attachments]" DisplayName="Save Attachments" FolderPath="C:\Users\Videh Nandini\Desktop\mAIL" sap:VirtualizedContainerService.HintSize="434,86.6666666666667" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[item]" OverwriteExisting="False" />
                                <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[&quot;YES&quot;]" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F&quot;+count.ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="591.333333333333,162" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                    <ueab:ReadCellValueX.SaveTo>
                      <OutArgument x:TypeArguments="x:String">[claimerPossible]</OutArgument>
                    </ueab:ReadCellValueX.SaveTo>
                  </ueab:ReadCellValueX>
                  <If Condition="[claimerPossible .Contains(&quot;YES&quot;)]" sap:VirtualizedContainerService.HintSize="591.333333333333,1024.66666666667" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="476,833.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="claimerMail" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="434,244.666666666667" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Which to send mail to claim insurance ? Enter claimer's mail id :" Title="claimer mail">
                          <ui:InputDialog.Result>
                            <OutArgument x:TypeArguments="x:String">[claimerMail]</OutArgument>
                          </ui:InputDialog.Result>
                        </ui:InputDialog>
                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G&quot;+count.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[claimerMail]" />
                        <Assign sap:VirtualizedContainerService.HintSize="434,65.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[FolderPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("C:\Users\Videh Nandini\Desktop\mAIL")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[FolderPath]" Body="Find below attached bills and prescriptions for insurance claim" DisplayName="Send SMTP Mail Message" Email="1ms19cs135.3b@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="434,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="False" Password="Utkarsh@#&amp;123" Port="25" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Regarding my insurance claim" To="[claimerMail]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendMail.Files>
                        </ui:SendMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelApplicationCard.Body>
          </ueab:ExcelApplicationCard>
          <Assign sap:VirtualizedContainerService.HintSize="667.333333333333,62" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[count+1]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
  </Sequence>
</Activity>